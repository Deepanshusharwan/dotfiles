#!/usr/bin/env bash


echo "-------------------------------------------------------------------------"
echo "WELCOME TO THE DOTPLOAD SCRIPT"
echo ""

set -e 
repo_path="$HOME/github_repos/my_repositories/dotfiles"


# so first lets backup the config directory with the rsync
echo "Setting up the rsync to backup everything to dotfiles/config"
rsync -avh --progress --delete --exclude={'chromium','Code*','VirtualBox','QtProject*','dconf','obsidian*','google-chrom*','JetBrains','BraveSoftwar*'} "$HOME/.config/." "$repo_path/config/"

# now we will backup everything in the bashrc
echo ""
echo ""
echo "Backing up the bashrc to dotfiles/bashrc"
rsync -avh --progress "$HOME/.bashrc" "$repo_path/bashrc/"

# now we will backup the changes from the wallpaper 
echo ""
echo ""
echo "Backing up the wallpapers to dotfiles/wallpapers"
rsync -avh --progress "$HOME/Pictures/wallpaper/." "$repo_path/wallpapers/"

#now we will backup the changes to the scripts
echo ""
echo ""
echo "Backing up the scripts to dotfiles/scripts"
rsync -avh --progress --delete "$HOME/scripts/." "$repo_path/scripts/"
echo ""

## don't need this part anymore --exclude did that
##now we will delete some sensitive files

#echo "Deleting google-chrome-beta"
#rm -r "$repo_path/config/google-chrome-beta"
#echo "Deleting chromium"
#rm -r "$repo_path/config/chromium"
#echo "Deleting dconf"
#rm -r "$repo_path/config/dconf"
#echo "Deleting google-chrome"
#rm -r "$repo_path/config/google-chrome"
#echo "Deleting google-chrome-unstable"
#rm -r "$repo_path/config/google-chrome-unstable"
#echo "Deleting JetBrains"
#rm -r "$repo_path/config/JetBrains"
#echo "Deleting BraveSoftware"
#rm -r "$repo_path/config/BraveSoftware"

echo ""
echo "All the files have been moved successfully"
echo "Starting git protocols..."
echo ""
echo ""

# if there is a command line argument then the following works
if [ $# -eq 1 ]; then
  cd "$repo_path"
  git add .
  read -p "Please enter you commit message: " message
  git commit -m "$message"
  git push origin main

else
  cd "$repo_path"
  git add .
  git commit -m " $(date) update"
  git push origin main
  
fi


echo "-------------------------------------------------------------------------"





## the portion below is an old script that works wihtout using the rsync

## okay so this script deletes everything from the dotfiles repo and then adds the stuff back to it 
## it uploads the files from the .config , scripts , wallpaper and .bashrc and then pushes them to git
## by default the commit message is the date and time of the date followed by update 
## but it can be customized by using the c option 

#echo "-------------------------------------------------------------------------"
#echo "WELCOME TO THE DOTPLOAD SCRIPT"
#echo ""

#set -e
#repo_path="$HOME/github_repos/my_repositories/dotfiles"


## so first of all delete everything inside the folders
#echo "Deleting the config directory."
#rm -r "$repo_path/config" || echo "config directory does not exist"

#echo "Deleting the bashrc directory."
#rm -r "$repo_path/bashrc" || echo "bashrc directory does not exist"

#echo "Deleting the wallpapers directory."
#rm -r "$repo_path/wallpapers" || echo "wallpapers directory does not exist"

#echo "Deleting the scripts directory."
#rm -r "$repo_path/scripts" || echo "scripts directory does not exist"


## next we will make the directories again

#echo "Creating directory config"
#mkdir "$repo_path/config"

#echo "Creating directory bashrc"
#mkdir "$repo_path/bashrc"

#echo "Creating directory wallpapers"
#mkdir "$repo_path/wallpapers"

#echo "Creating directory scripts"
#mkdir "$repo_path/scripts"


## now we will cp everything from the apt dirs

#echo "Copying the configuration files to dotfiles/config."
#cp -r "$HOME/.config/." "$repo_path/config"

#echo "Copying the .bashrc file to dotfiles/bashrc"
#cp "$HOME/.bashrc" "$repo_path/bashrc"

#echo "Copying the wallpapers to the dotfile/wallpapers"
#cp -r "$HOME/Pictures/wallpaper/." "$repo_path/wallpapers"

#echo "Copying the scripts to dotfiles/scripts"
#cp -r "$HOME/scripts/." "$repo_path/scripts"


##now we will delete some sensitive files


#echo "Deleting google-chrome-beta"
#rm -r "$repo_path/config/google-chrome-beta"
#echo "Deleting chromium"
#rm -r "$repo_path/config/chromium"
#echo "Deleting dconf"
#rm -r "$repo_path/config/dconf"
#echo "Deleting google-chrome"
#rm -r "$repo_path/config/google-chrome"
#echo "Deleting google-chrome-unstable"
#rm -r "$repo_path/config/google-chrome-unstable"
#echo "Deleting JetBrains"
#rm -r "$repo_path/config/JetBrains"
#echo "Deleting BraveSoftware"
#rm -r "$repo_path/config/BraveSoftware"


#echo ""
#echo "All the files have been moved successfully"
#echo "Starting git protocols..."
#echo ""
#echo ""

## if there is a command line argument then the following works
#if [ $# -eq 1 ]; then
#  cd "$repo_path"
#  git add .
#  read -p "Please enter you commit message: " message
#  git commit -m "$message"
#  git push origin main

#else
#  cd "$repo_path"
#  git add .
#  git commit -m " $(date) update"
#  git push origin main
  
#fi


#echo "-------------------------------------------------------------------------"
